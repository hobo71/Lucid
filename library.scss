
// align.scss

/*
 * Alignment Classes
 */

/* Classes
 * ========================================================================= */

/// Align classes (using flexbox)
/// @group align
.align {
  
  /// @group align
  &--center {
    display: flex;
    align-items: center;
  }
}

// animation.scss

/*
 * A collection of mixins using the 'animation' properties
 */

/*
 * animation-duration mixin including vendor prefixed properties
 *
 * Example usage:
 *
 *   @include animation-duration(1s);
 */
@mixin animation-duration($time) {
  -moz-animation-duration: $time;
  -ms-animation-duration: $time;
  -webkit-animation-duration: $time;
  animation-duration: $time;
}

/*
 * animation-iteration-count mixin including vendor prefixed properties
 *
 * Example usage:
 *
 *   @include animation-iteration-count(infinite);
 */
@mixin animation-iteration-count($type) {
  -moz-animation-iteration-count: $type;
  -ms-animation-iteration-count: $type;
  -webkit-animation-iteration-count: $type;
  animation-iteration-count: $type;
}

/*
 * animation-name mixin including vendor prefixed properties
 *
 * Example usage:
 *
 *   @include animation-name(spin);
 */
@mixin animation-name($name) {
  -moz-animation-name: $name;
  -ms-animation-name: $name;
  -webkit-animation-name: $name;
  animation-name: $name;
}

/*
 * animation-timing-function mixin including vendor prefixed properties
 *
 * Example usage:
 *
 *   @include animation-timing-function(linear);
 */
@mixin animation-timing-function($type) {
  -moz-animation-timing-function: $type;
  -ms-animation-timing-function: $type;
  -webkit-animation-timing-function: $type;
  animation-timing-function: $type;
}


// background.scss

/*
 * Background Classes
 */

/* Imports
 * ========================================================================= */

@import 'src/colours';

/* Styles
 * ========================================================================= */

// New version
// ---------------------

/// Background styles
/// @group backgrounds
.bg {
  
  /// @group backgrounds
  &--primary {
    background-color: $colour--brand-primary;
  }
  
  /// @group backgrounds
  &--secondary {
    background-color: $colour--brand-secondary;
  }
  
  /// @group backgrounds
  &--light-primary {
    background-color: $colour--light-primary;
  }
  
  /// @group backgrounds
  &--light-secondary {
    background-color: $colour--light-secondary;
  }
  
  /// @group backgrounds
  &--dark-primary {
    background-color: $colour--dark-primary;
  }
  
  /// @group backgrounds
  &--dark-secondary {
    background-color: $colour--dark-secondary;
  }
  
  /// @group backgrounds
  &--dark-tertiary {
    background-color: $colour--dark-tertiary;
  }
  
  /// @group backgrounds
  &--grey-one {
    background-color: $colour--grey-one;
  }
  
  /// @group backgrounds
  &--grey-two {
    background-color: $colour--grey-two;
  }
  
  /// @group backgrounds
  &--grey-three {
    background-color: $colour--grey-three;
  }
  
  /// @group backgrounds
  &--success {
    background-color: $colour--success;
  }
  
  /// @group backgrounds
  &--warning {
    background-color: $colour--warning;
  }
  
  /// @group backgrounds
  &--danger {
    background-color: $colour--danger;
  }
  
  /// @group backgrounds
  &--transparent {
    background-color: transparent;
  }
}

// borders.scss

/**
 * Border Classes
 */

/* Imports
 * ========================================================================= */

// Colours
@import 'src/colours';

/* Variables
 * ========================================================================= */

$border--default-thickness: 1px;

/* Styles
 * ========================================================================= */

// New version
// ---------------------

/// Border classes
/// @group borders
.border {
  border: $border--default-thickness solid;
  
  /*
   * Positions
   */
  
  /// @group borders
  &--top {
    border-top: $border--default-thickness solid;
    border-bottom: 0 solid;
    border-left: 0 solid;
    border-right: 0 solid;
  }
  
  /// @group borders
  &--bottom {
    border-top: 0 solid;
    border-bottom: $border--default-thickness solid;
    border-left: 0 solid;
    border-right: 0 solid;
  }
  
  /// @group borders
  &--left {
    border-top: 0 solid;
    border-bottom: 0 solid;
    border-left: $border--default-thickness solid;
    border-right: 0 solid;
  }
  
  /// @group borders
  &--right {
    border-top: 0 solid;
    border-bottom: 0 solid;
    border-left: 0 solid;
    border-right: $border--default-thickness solid;
  }
  
  /*
   * Colours
   */
  
  /// @group borders
  &--light-primary {
    border-color: $colour--light-primary!important;
  }
  
  /// @group borders
  &--light-secondary {
    border-color: $colour--light-secondary!important;
  }
  
  /// @group borders
  &--dark-primary {
    border-color: $colour--dark-primary!important;
  }
  
  /// @group borders
  &--dark-secondary {
    border-color: $colour--dark-secondary!important;
  }
  
  /// @group borders
  &--dark-tertiary {
    border-color: $colour--dark-tertiary!important;
  }
  
  /// @group borders
  &--grey-one {
    border-color: $colour--grey-one !important;
  }
  
  /// @group borders
  &--grey-two {
    border-color: $colour--grey-two !important;
  }
  
  /// @group borders
  &--grey-three {
    border-color: $colour--grey-three!important;
  }
  
  /// @group borders
  &--success {
    border-color: $colour--success;
  }
  
  /// @group borders
  &--warning {
    border-color: $colour--warning;
  }
  
  /// @group borders
  &--danger {
    border-color: $colour--danger;
  }
  
  /*
   * Thickness
   */
  
  /// @group borders
  &--none {
    border: none !important;
  }
  
  /// @group borders
  &--x2 {
    border-width: $border--default-thickness * 2;
  }
  
  /// @group borders
  &--x3 {
    border-width: $border--default-thickness * 3;
  }
  
  /// @group borders
  &--x4 {
    border-width: $border--default-thickness * 4;
  }
  
  /// @group borders
  &--x5 {
    border-width: $border--default-thickness * 5;
  }
}

// box-shadow.scss

/* Mixins
 * ========================================================================= */

/**
 * A mixin which helps you to add depth to elements according to the Google Material Design spec:
 * http://www.google.com/design/spec/layout/layout-principles.html#layout-principles-dimensionality
 *
 * Example usage:
 *
 *   @include ausl__box-shadow-helper(1);
 */

@mixin box-shadow-helper($level: 1){
    @if $level == 1 {
        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
    }
    @else if $level == 2 {
        box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
    }
    @else if $level == 3 {
        box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);
    }
    @else if $level == 4 {
        box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
    }
    @else if $level == 5 {
        box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);
    }
    @else {
      box-shadow: none;
    }
}

/* Classes
 * ========================================================================= */

.box-shadow {
  
  &--level-1 {
    @include box-shadow-helper(1);
  }
  
  &--level-2 {
    @include box-shadow-helper(2);
  }
  
  &--level-3 {
    @include box-shadow-helper(3);
  }
  
  &--level-4 {
    @include box-shadow-helper(4);
  }
  
  &--level-5 {
    @include box-shadow-helper(5);
  }
}

// box-sizing.scss

/*
 * A collection of mixins using the 'box-sizing' properties
 */

/**
* box-sizing mixin including vendor prefixed properties
*
* Example usage:
*
*   @include box-sizing(border-box);
*/
@mixin box-sizing($type: border-box) {
  -moz-box-sizing: $type;
  -webkit-box-sizing: $type;
  box-sizing: $type;
}


// clearfix.scss

/**
 * Clear fix mixin for use with floats
 *
 * Example usage:
 *
 *   @include clearfix;
 */
@mixin clearfix {
  zoom:1;
  &:before,
  &:after {
    content:"";
    display:table;
  }

  &:after {
    clear: both;
  }
}


// colours.scss

/* Variables
 * ========================================================================= */

/// Primary brand colour
/// @group colours
$colour--brand-primary: #00bfd3;

/// Secondary brand colour
/// @group colours
$colour--brand-secondary: darken($colour--brand-primary, 10%);

/// Primary dark colour
/// @group colours
$colour--dark-primary: #31323e;

/// Secondary brand colour
/// @group colours
$colour--dark-secondary: rgb(0, 57, 75);

/// Secondary brand colour
/// @group colours
$colour--dark-tertiary: rgb(33, 82, 103);

/// Grey colour one
/// @group colours
$colour--grey-one: rgb(159, 160, 177);

/// Grey colour two
/// @group colours
$colour--grey-two: rgb(227, 234, 243);

/// Grey colour three
/// @group colours
$colour--grey-three: rgb(244, 247, 250);

/// Primary light colour
/// @group colours
$colour--light-primary: white;

/// Secondary light colour
/// @group colours
$colour--light-secondary: #E7EBEE;

/// Success colour
/// @group colours
$colour--success: rgb(92, 210, 151);

/// Warning colour
/// @group colours
$colour--warning: rgb(246, 193, 105);

/// Danger colour
/// @group colours
$colour--danger: rgb(240, 112, 134);

/// Transparent colour
/// @group colours
$colour--transparent: transparent;

// depth.scss

/*
 * Depth / Layering Styles
 */

/* Variables
 * ========================================================================= */

/// Depth level 1
/// @group depth
$depth--level-1: 100;

/// Depth level 2
/// @group depth
$depth--level-2: 200;

/// Depth level 3
/// @group depth
$depth--level-3: 300;

/// Depth level 4
/// @group depth
$depth--level-4: 400;

/// Depth level 5
/// @group depth
$depth--level-5: 500;

/// Depth level top
/// @group depth
$depth--level-top: 2000;

/* Styles
 * ========================================================================= */

/// Depth classes
/// @group depth
.depth {
  
  /// @group depth
  &--level-1 {
    z-index: $depth--level-1;
  }
  
  /// @group depth
  &--level-2 {
    z-index: $depth--level-2;
  }
  
  /// @group depth
  &--level-3 {
    z-index: $depth--level-3;
  }
  
  /// @group depth
  &--level-4 {
    z-index: $depth--level-4;
  }
  
  /// @group depth
  &--level-5 {
    z-index: $depth--level-5;
  }
  
  /// @group depth
  &--top {
    z-index: $depth--level-top;
  }
}

// fonts.scss

/*
 * Font Styles
 */

/* Variables
 * ========================================================================= */

/// Font family
/// @group fonts
$font-family: 'Open Sans', sans-serif;

/// Font weight light
/// @group fonts
$font-light: 300;

/// Font weight normal
/// @group fonts
$font-normal: 300;

/// Font weight normal
/// @group fonts
$font-medium: 400;

/// Font weight bold
/// @group fonts
$font-bold: 600;

/* Styles
 * ========================================================================= */

/// Font sizes
/// @group fonts
.font-size {
  
  /// @group fonts
  &--small {
    font-size: 12px;
  }
  
  /// @group fonts
  &--medium {
    font-size: 14px;
  }
  
  /// @group fonts
  &--large {
    font-size: 14px;
  }
  
  /// @group fonts
  &--extra-large {
    font-size: 18px;
  }
}




// headings.scss

/**
 * Headings styles
 */

/* Import
 * ========================================================================= */

// Colours
@import 'src/colours';

// Media Queries
@import 'src/media-queries';

// Sizes
@import 'src/sizes';

/* Variables
 * ========================================================================= */

/// Small heading size
/// @group headings
$heading--extra-small: 15px;

/// Small heading size
/// @group headings
$heading--small: 18px;

/// Medium heading size
/// @group headings
$heading--medium: 24px;

/// Large heading size
/// @group headings
$heading--large: 38px;

/// Extra large heading size
/// @group headings
$heading--extra-large: 46px;

/* Classes
 * ========================================================================= */

/// Heading classes
/// @group headings
.heading {
  text-transform: uppercase;
  color: $colour--dark-primary;
  font-size: $heading--small;
  font-weight: 400;
  transition-duration: .4s;
  
  /// Extra small heading
  /// @group headings
  &--extra-small {
    font-size: $heading--extra-small;
    // font-weight: 100;
    font-family: 'Helvetica', 'Arial', sans-serif;
    text-transform: initial;
    
    @include below-breakpoint($sizes--breakpoint-large) {
      font-size: 12px;
    }
  }
  
  /// Small heading
  /// @group headings
  &--small {
    font-size: $heading--small;
    
    @include below-breakpoint($sizes--breakpoint-large) {
      font-size: $heading--extra-small;
    }
  }
  
  /// Medium heading
  /// @group headings
  &--medium {
    font-size: $heading--medium;
    
    @include below-breakpoint($sizes--breakpoint-large) {
      font-size: $heading--small;
    }
  }
  
  /// Large heading
  /// @group headings
  &--large {
    font-size: $heading--large;
    
    @include below-breakpoint($sizes--breakpoint-large) {
      font-size: $heading--medium;
    }
  }
  
  /// Extra large heading
  /// @group headings
  &--extra-large {
    font-size: $heading--extra-large;
    
    @include below-breakpoint($sizes--breakpoint-large) {
      font-size: $heading--large;
    }
  }
}

// justify.scss

/*
 * Justify Helper Classes
 */

/// Justify classes (using flexbox)
/// @group justify
.justify {
  
  /// @group justify
  &--start {
    display: flex;
    justify-content: flex-start;
  }
  
  /// @group justify
  &--end {
    display: flex;
    justify-content: flex-end;
  }
  
  /// @group justify
  &--center {
    display: flex;
    justify-content: center;
  }
  
  /// @group justify
  &--space-around {
    display: flex;
    justify-content: space-around;
  }
  
  /// @group justify
  &--space-between {
    display: flex;
    justify-content: space-between;
  }
}

// margins.scss

/**
 * Margin Classes
 */

/* Variables
 * ========================================================================= */

/// Default margin
/// @group margins
$margin--default: 15px;

/// Small margin
/// @group margins
$margin--small: 10px;

/// Extra small margin
/// @group margins
$margin--extra-small: 5px;

/// XXS margin
/// @group margins
$margin--extra-extra-small: 2px 4px;

/// Medium margin
/// @group margins
$margin--medium: 20px;

/// Large margin
/// @group margins
$margin--large: 30px;

/// Extra-large margin
/// @group margins
$margin--extra-large: 40px;

/// No margin
/// @group margins
$margin--none: 0;

/* Styles
 * ========================================================================= */

/*
 * Margin all
 */

/// Margin auto
/// @group margins
.m-a {
  margin: 0 auto;
}

/// XXS margin
/// @group margins
.m-xxs {
  margin: 2px;
}

/// Extra-small margin
/// @group margins
.m-xs {
  margin: $margin--extra-small;
}

/// Small margin
/// @group margins
.m-sm {
  margin: $margin--small;
}

/// Default margin
/// @group margins
.m {
  margin: $margin--default;
}

/// Medium margin
/// @group margins
.m-md {
  margin: $margin--medium;
}

/// Large margin
/// @group margins
.m-lg {
  margin: $margin--large;
}

/// Extra-large margin
/// @group margins
.m-xl {
  margin: $margin--extra-large;
}

/// No margin
/// @group margins
.m-n {
  margin: 0 !important;
}

/*
 * Margin left
 */
 
/// @group margins
.m-l-none {
  margin-left: 0;
}

/// @group margins
.m-l-xs {
  margin-left: $margin--extra-small;
}

/// @group margins
.m-l-sm {
  margin-left: $margin--small;
}

/// @group margins
.m-l {
  margin-left: $margin--default;
}

/// @group margins
.m-l-md {
  margin-left: $margin--medium;
}

/// @group margins
.m-l-lg {
  margin-left: $margin--large;
}

/// @group margins
.m-l-xl {
  margin-left: $margin--extra-large;
}

/// @group margins
.m-l-xxl {
  margin-left: 50px;
}

/// @group margins
.m-l-n-xxs {
  margin-left: -1px;
}

/// @group margins
.m-l-n-xs {
  margin-left: -$margin--extra-small;
}

/// @group margins
.m-l-n-sm {
  margin-left: -$margin--small;
}

/// @group margins
.m-l-n {
  margin-left: -$margin--default;
}

/// @group margins
.m-l-n-md {
  margin-left: -$margin--medium;
}

/// @group margins
.m-l-n-lg {
  margin-left: -$margin--large;
}

/// @group margins
.m-l-n-xl {
  margin-left: -$margin--extra-large;
}

/*
 * Margin top
 */
 
/// @group margins
.m-t-none {
  margin-top: 0;
}

/// @group margins
.m-t-xxs {
  margin-top: 1px;
}

/// @group margins
.m-t-xs {
  margin-top: $margin--extra-small;
}

/// @group margins
.m-t-sm {
  margin-top: $margin--small;
}

/// @group margins
.m-t {
  margin-top: $margin--default;
}

/// @group margins
.m-t-md {
  margin-top: $margin--medium;
}

/// @group margins
.m-t-lg {
  margin-top: $margin--large;
}

/// @group margins
.m-t-xl {
  margin-top: $margin--extra-large;
}

/// @group margins
.m-t-xxl {
  margin-top: 50px;
}

/// @group margins
.m-t-n-xxs {
  margin-top: -1px;
}

/// @group margins
.m-t-n-xs {
  margin-top: -$margin--extra-small;
}

/// @group margins
.m-t-n-sm {
  margin-top: -$margin--small;
}

/// @group margins
.m-t-n {
  margin-top: -$margin--default;
}

/// @group margins
.m-t-n-md {
  margin-top: -$margin--medium;
}

/// @group margins
.m-t-n-lg {
  margin-top: -$margin--large;
}

/// @group margins
.m-t-n-xl {
  margin-top: -$margin--extra-large;
}

/*
 * Margin right
 */
 
/// @group margins
.m-r-none {
  margin-right: 0;
}

/// @group margins
.m-r-xxs {
  margin-right: 1px;
}

/// @group margins
.m-r-xs {
  margin-right: $margin--extra-small;
}

/// @group margins
.m-r-sm {
  margin-right: $margin--small;
}

/// @group margins
.m-r {
  margin-right: $margin--default;
}

/// @group margins
.m-r-md {
  margin-right: $margin--medium;
}

/// @group margins
.m-r-lg {
  margin-right: $margin--large;
}

/// @group margins
.m-r-xl {
  margin-right: $margin--extra-large;
}

/// @group margins
.m-r-n-xxs {
  margin-right: -1px;
}

/// @group margins
.m-r-n-xs {
  margin-right: -$margin--extra-small;
}

/// @group margins
.m-r-n-sm {
  margin-right: -$margin--small;
}

/// @group margins
.m-r-n {
  margin-right: -$margin--default;
}

/// @group margins
.m-r-n-md {
  margin-right: -$margin--medium;
}

/// @group margins
.m-r-n-lg {
  margin-right: -$margin--large;
}

/// @group margins
.m-r-n-xl {
  margin-right: -$margin--extra-large;
}

/*
 * Margin bottom
 */
 
/// @group margins
.m-b-none {
  margin-bottom: 0;
}

/// @group margins
.m-b-xxs {
  margin-bottom: 1px;
}

/// @group margins
.m-b-xs {
  margin-bottom: $margin--extra-small;
}

/// @group margins
.m-b-sm {
  margin-bottom: $margin--small;
}

/// @group margins
.m-b {
  margin-bottom: $margin--default;
}

/// @group margins
.m-b-md {
  margin-bottom: $margin--medium;
}

/// @group margins
.m-b-lg {
  margin-bottom: $margin--large;
}

/// @group margins
.m-b-xl {
  margin-bottom: $margin--extra-large;
}

/// @group margins
.m-b-n-xxs {
  margin-bottom: -1px;
}

/// @group margins
.m-b-n-xs {
  margin-bottom: -$margin--extra-small;
}

/// @group margins
.m-b-n-sm {
  margin-bottom: -$margin--small;
}

/// @group margins
.m-b-n {
  margin-bottom: -$margin--default;
}

/// @group margins
.m-b-n-md {
  margin-bottom: -$margin--medium;
}

/// @group margins
.m-b-n-lg {
  margin-bottom: -$margin--large;
}

/// @group margins
.m-b-n-xl {
  margin-bottom: -$margin--extra-large;
}



// media-queries.scss

/**
 * Apply styles to an element above a certain screen size
 *
 * Example usage:
 *
 *   @include above-breakpoint(900px) {
 *     background-color: #ff0000;
 *   }
 */
@mixin above-breakpoint($size) {
  @media screen and (min-width: $size) { @content; }
}

/**
 * Apply styles to an element below a certain screen size
 *
 * Example usage:
 *
 *   @include below-breakpoint(900px) {
 *     background-color: #00ff00;
 *   }
 */
@mixin below-breakpoint($size) {
  @media screen and (max-width: $size) { @content; }
}


// padding.scss

/**
 * Padding Classes
 */

/* Variables
 * ========================================================================= */

/// Default padding
/// @group padding
$padding--default: 15px;

/// Small padding
/// @group padding
$padding--small: 10px;

/// Extra-small padding
/// @group padding
$padding--extra-small: 5px;

/// XXS padding
/// @group padding
$padding--extra-extra-small: 2px 4px;

/// Medium padding
/// @group padding
$padding--medium: 20px;

/// Large padding
/// @group padding
$padding--large: 30px;

/// Extra-large padding
/// @group padding
$padding--extra-large: 40px;

/// No padding
/// @group padding
$padding--none: 0;

/* Styles
 * ========================================================================= */

// New version
// --------------------------

/// @group padding
.padding {
  
  /// @group padding
  &--none {
    padding: 0;
  }
}

// --------------------------

/*
 * Padding all
 */
 
/// @group padding
.p-xxs {
  padding: $padding--extra-extra-small;
}

/// @group padding
.p-xs {
  padding: $padding--extra-small;
}

/// @group padding
.p-sm {
  padding: $padding--small;
}

/// @group padding
.p {
  padding: $padding--default;
}

/// @group padding
.p-md {
  padding: $padding--medium;
}

/// @group padding
.p-lg {
  padding: $padding--large;
}

/// @group padding
.p-xl {
  padding: $padding--extra-large;
}

/// @group padding
.p-n {
  padding: $padding--none !important;
}

/*
 * Padding left
 */
 
/// @group padding
.p-l-none {
  padding-left: $padding--none;
}

/// @group padding
.p-l-xs {
  padding-left: $padding--extra-small;
}

/// @group padding
.p-l-sm {
  padding-left: $padding--small;
}

/// @group padding
.p-l {
  padding-left: $padding--default;
}

/// @group padding
.p-l-md {
  padding-left: $padding--medium;
}

/// @group padding
.p-l-lg {
  padding-left: $padding--large;
}

/// @group padding
.p-l-xl {
  padding-left: $padding--extra-large;
}

/// @group padding
.p-l-n-xxs {
  padding-left: -1px;
}

/// @group padding
.p-l-n-xs {
  padding-left: -$padding--extra-small;
}

/// @group padding
.p-l-n-sm {
  padding-left: -$padding--small;
}

/// @group padding
.p-l-n {
  padding-left: -$padding--default;
}

/// @group padding
.p-l-n-md {
  padding-left: -$padding--medium;
}

/// @group padding
.p-l-n-lg {
  padding-left: -$padding--large;
}

/// @group padding
.p-l-n-xl {
  padding-left: -$padding--extra-large;
}

/*
 * Padding top
 */

/// @group padding
.p-t-none {
  padding-top: $padding--none;
}

/// @group padding
.p-t-xxs {
  padding-top: 1px;
}

/// @group padding
.p-t-xs {
  padding-top: $padding--extra-small;
}

/// @group padding
.p-t-sm {
  padding-top: $padding--small;
}

/// @group padding
.p-t {
  padding-top: $padding--default;
}

/// @group padding
.p-t-md {
  padding-top: $padding--medium;
}

/// @group padding
.p-t-lg {
  padding-top: $padding--large;
}

/// @group padding
.p-t-xl {
  padding-top: $padding--extra-large;
}

/// @group padding
.p-t-huge {
  padding-top: 270px;
}

/// @group padding
.p-t-n-xxs {
  padding-top: -1px;
}

/// @group padding
.p-t-n-xs {
  padding-top: -$padding--extra-small;
}

/// @group padding
.p-t-n-sm {
  padding-top: -$padding--small;
}

/// @group padding
.p-t-n {
  padding-top: -$padding--default;
}

/// @group padding
.p-t-n-md {
  padding-top: -$padding--medium;
}

/// @group padding
.p-t-n-lg {
  padding-top: -$padding--large;
}

/// @group padding
.p-t-n-xl {
  padding-top: -$padding--extra-large;
}

/*
 * Padding right
 */

/// @group padding
.p-r-none {
  padding-right: $padding--none;
}

/// @group padding
.p-r-xxs {
  padding-right: 1px;
}

/// @group padding
.p-r-xs {
  padding-right: $padding--extra-small;
}

/// @group padding
.p-r-sm {
  padding-right: $padding--small;
}

/// @group padding
.p-r {
  padding-right: $padding--default;
}

/// @group padding
.p-r-md {
  padding-right: $padding--medium;
}

/// @group padding
.p-r-lg {
  padding-right: $padding--large;
}

/// @group padding
.p-r-xl {
  padding-right: $padding--extra-large;
}

/// @group padding
.p-r-n-xxs {
  padding-right: -1px;
}

/// @group padding
.p-r-n-xs {
  padding-right: -$padding--extra-small;
}

/// @group padding
.p-r-n-sm {
  padding-right: -$padding--small;
}

/// @group padding
.p-r-n {
  padding-right: -$padding--default;
}

/// @group padding
.p-r-n-md {
  padding-right: -$padding--medium;
}

/// @group padding
.p-r-n-lg {
  padding-right: -$padding--large;
}

/// @group padding
.p-r-n-xl {
  padding-right: -$padding--extra-large;
}

/*
 * Padding bottom
 */

/// @group padding
.p-b-none {
  padding-bottom: $padding--none;
}

/// @group padding
.p-b-xxs {
  padding-bottom: 1px;
}

/// @group padding
.p-b-xs {
  padding-bottom: $padding--extra-small;
}

/// @group padding
.p-b-sm {
  padding-bottom: $padding--small;
}

/// @group padding
.p-b {
  padding-bottom: $padding--default;
}

/// @group padding
.p-b-md {
  padding-bottom: $padding--medium;
}

/// @group padding
.p-b-lg {
  padding-bottom: $padding--large;
}

/// @group padding
.p-b-xl {
  padding-bottom: $padding--extra-large;
}

/// @group padding
.p-b-n-xxs {
  padding-bottom: -1px;
}

/// @group padding
.p-b-n-xs {
  padding-bottom: -$padding--extra-small;
}

/// @group padding
.p-b-n-sm {
  padding-bottom: -$padding--small;
}

/// @group padding
.p-b-n {
  padding-bottom: -$padding--default;
}

/// @group padding
.p-b-n-md {
  padding-bottom: -$padding--medium;
}

/// @group padding
.p-b-n-lg {
  padding-bottom: -$padding--large;
}

/// @group padding
.p-b-n-xl {
  padding-bottom: -$padding--extra-large;
}

// radius.scss

/*
 * Border-radius
 */

/* Variables
 * ========================================================================= */

/// Small radius
/// @group border-radius
$radius--small: 4px;

/// Medium radius
/// @group border-radius
$radius--medium: 10px;

/// Large radius
/// @group border-radius
$radius--large: 15px;

/// Extra large radius
/// @group border-radius
$radius--extra-large: 100px;

/* Mixins
 * ========================================================================= */

/// Border radius mixin
/// @group border-radius
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

/// Radius positions mixin
/// Adds top, bottom, left, and right radii
/// @group border-radius
@mixin all-radius-positions($radius) {
  &--left {
    @include border-radius($radius 0 0 $radius);
  }
  
  &--right {
    @include border-radius(0 $radius $radius 0);
  }
  
  &--top {
    @include border-radius($radius $radius 0 0);
  }
  
  &--bottom {
    @include border-radius(0 0 $radius $radius);
  }
}

/* Classes
 * ========================================================================= */

// New version
// ---------------------

/// Border-radius classes
/// @group border-radius
.radius {
  @include border-radius($radius--small $radius--small $radius--small $radius--small);
  
  // Add top, bottom, left, right radii
  @include all-radius-positions($radius--small);
  
  /// @group border-radius
  &--medium {
    @include border-radius($radius--medium $radius--medium $radius--medium $radius--medium);
    
    // Add top, bottom, left, right radii
    @include all-radius-positions($radius--medium);
  }
  
  /// @group border-radius
  &--large {
    @include border-radius($radius--large $radius--large $radius--large $radius--large);
    
    // Add top, bottom, left, right radii
    @include all-radius-positions($radius--large);
  }
  
  /// @group border-radius
  &--extra-large {
    @include border-radius($radius--extra-large $radius--extra-large $radius--extra-large $radius--extra-large);
    
    // Add top, bottom, left, right radii
    @include all-radius-positions($radius--extra-large);
  }
  
  /// @group border-radius
  &--circle {
    @include border-radius(100%);
  }
  
  /// @group border-radius
  &--none {
    @include border-radius(0);
  }
}

// retina.scss

/*
 * Mixins to handle displaying on retina screens
 */

/// Apply styles on retina screens
/// @group retina
@mixin on-retina-screens() {
  @media only screen and (mix--moz-device-pixel-ratio: 2),
         only screen and (-o-min-device-pixel-ratio: 2/1),
         only screen and (-webkit-min-device-pixel-ratio: 2),
         only screen and (min-device-pixel-ratio: 2) {
    
    @content;
  }
}

// sizes.scss

/// Extra-small breakpoint
/// @group sizes
$sizes--breakpoint-extra-small: 480px;

/// Small breakpoint
/// @group sizes
$sizes--breakpoint-small: 768px;

/// Medium breakpoint
/// @group sizes
$sizes--breakpoint-medium: 992px;

/// Large breakpoint
/// @group sizes
$sizes--breakpoint-large: 1200px;


// text-areas.scss

/*
* A collection of text area mixins
*/

/**
* padded text area mixin
*
* Example usage:
*
*   @include padded-text-area(...);
*/
@mixin padded-text-area($fontFamily, $fontSize, $lineHeight, $padding,
                  $wordSpacing, $borderBottom, $borderTop, $color,
                  $backgroundColor, $textAlign) {
  font-family: $fontFamily;
  line-height: $lineHeight;
  padding: $padding;
  border-top: $borderTop;
  border-bottom: $borderBottom;
  font-size: $fontSize;
  word-spacing: $wordSpacing;
  text-align: $textAlign;
  color: $color;
  background-color: $backgroundColor;

  -ms-word-break: break-all;
  word-break: break-all;

  /* Non standard for webkit */
  word-break: break-word;

  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  hyphens: auto;
}


// text.scss

/*
 * Text Classes
 */

/* Imports
 * ========================================================================= */

@import 'src/colours';

/* Styles
 * ========================================================================= */

// New version
// --------------------

/// Text classes
/// @group text
.text {
  
  /*
   * Text colours
   */
  
  /// @group text
  &--primary {
    color: $colour--brand-primary !important;
  }
  
  /// @group text
  &--secondary {
    color: $colour--brand-secondary !important;
  }
  
  /// @group text
  &--light-primary {
    color: $colour--light-primary !important;
  }
  
  /// @group text
  &--light-secondary {
    color: $colour--light-secondary !important;
  }
  
  /// @group text
  &--dark-primary {
    color: $colour--dark-primary !important;
  }
  
  /// @group text
  &--dark-secondary {
    color: $colour--dark-secondary !important;
  }
  
  /// @group text
  &--dark-tertiary {
    color: $colour--dark-tertiary !important;
  }
  
  /// @group text
  &--grey-one {
    color: $colour--grey-one !important;
  }
  
  /// @group text
  &--grey-two {
    color: $colour--grey-two !important;
  }
  
  /// @group text
  &--grey-three {
    color: $colour--grey-three !important;
  }
  
  /// @group text
  &--success {
    color: $colour--success;
  }
  
  /// @group text
  &--warning {
    color: $colour--warning;
  }
  
  /// @group text
  &--danger {
    color: $colour--danger;
  }
  
  /*
   * Text positions
   */
   
  /// @group text
   &--center {
     text-align: center !important;
   }
   
  /// @group text
   &--left {
     text-align: left !important;
   }
   
  /// @group text
   &--right {
     text-align: right !important;
   }
}

// transform.scss

/*
 * A collection of mixins using the 'transform' properties
 */

/**
* transform: rotate() mixin including vendor prefixed properties
*
* Example usage:
*
*   @include rotate(90deg);
*/
@mixin rotate($degrees) {
  -ms-transform: rotate($degrees);
  -webkit-transform: rotate($degrees);
  transform: rotate($degrees);
}

/**
 * transform: translateY() mixin including vendor prefixed properties
 *
 * Example usage:
 *
 *   @include translateY(50%);
 */
@mixin translateY($translation) {
  -moz-transform: translateY($translation);
  -ms-transform: translateY($translation);
  -o-transform: translateY($translation);
  -webkit-transform: translateY($translation);
  transform: translateY($translation);
}


// transition.scss

/*
 * A collection of mixins using the 'transition' properties
 */

/**
 * transition mixin including vendor prefixed properties
 *
 * Example usage:
 *
 *   @include transition(top, 1s, ease);
 */
@mixin transition($type, $time, $curve) {
  -o-transition: $type $time $curve;
  -moz-transition: $type $time $curve;
  -webkit-transition: $type $time $curve;
  transition: $type $time $curve;
}

/**
 * transition-delay mixin including vendor prefixed properties
 *
 * Example usage:
 *
 *   @include transition-delay(1s);
 */
@mixin transition-delay($time) {
  -webkit-transition-delay: $time;
  transition-delay: $time;
}

/**
 * transition-duration mixin including vendor prefixed properties
 *
 * Example usage:
 *
 *   @include transition-duration(.4s);
 */
@mixin transition-duration($time) {
  -moz-transition-duration: $time;
  -o-transition-duration: $time;
  -webkit-transition-duration: $time;
  transition-duration: $time;
}

/**
 * transition mixin which accepts an arbitrary number of arguments
 *
 * Example usage:
 *
 *   @include transition-properties(1s top ease .4s, .4s color linear 0s);
 */
@mixin transition-properties($arguments...) {
  -webkit-transition: $arguments;
  -moz-transition: $arguments;
  -o-transition: $arguments;
  transition: $arguments;
}
